# .github/workflows/migrate-secrets-to-gcp.yml

name: 'Migrate Secrets: GitHub to GCP'

on:
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  GCP_PROJECT_ID: 'everlab-secrets'
  GCP_WORKLOAD_IDENTITY_PROVIDER: 'projects/670325066591/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
  GCP_SERVICE_ACCOUNT: 'github-secrets-migrator-sa@everlab-secrets.iam.gserviceaccount.com'

jobs:
  migrate-secrets:
    name: Migrate GitHub Secrets to GCP Secret Manager
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to GCP using WIF
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.GCP_SERVICE_ACCOUNT }}

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Migrate All Declared Secrets (TF_VAR_ prefix removed, GCP create commented out)
        shell: bash
        run: |
          declare -a secrets=(
            "LINEAR_API_KEY"
            "LINEAR_CLIENT_ID"
            "LINEAR_CLIENT_SECRET"
            "SLACK_WEBHOOK_URL"
            "DB_READONLY_USER_PASSWORD_prod"
            "DB_READONLY_USER_PASSWORD_staging"
            "OCR_PROCESSOR_ID_prod"
            "OCR_PROCESSOR_ID_staging"
            "PULUMI_APP_CONFIG_PASSPHRASE_prod"
            "PULUMI_APP_CONFIG_PASSPHRASE_staging"
            "PULUMI_CICD_GOOGLE_CREDENTIALS_prod"
            "PULUMI_CICD_GOOGLE_CREDENTIALS_staging"
            "PULUMI_CLOUDFLARE_API_TOKEN_prod"
            "PULUMI_CLOUDFLARE_API_TOKEN_staging"
            "CLOUDFLARE_ORG_staging"
            "CLOUDFLARE_CLIENT_ID_staging"
            "CLOUDFLARE_CLIENT_SECRET_staging"
            "SES_EVENT_INNGEST_WEBHOOK_SECRET_prod"
            "SES_EVENT_INNGEST_WEBHOOK_SECRET_staging"
            "SYNTHESIA_API_KEY_prod"
            "SYNTHESIA_API_KEY_staging"
            "SYNTHESIA_WEBHOOK_SECRET_prod"
            "SYNTHESIA_WEBHOOK_SECRET_staging"
            "CONSULT_CLERK_SECRET_KEY_prod"
            "CONSULT_CLERK_SECRET_KEY_staging"
            "CONSULT_CLERK_PUBLISHABLE_KEY_prod"
            "CONSULT_CLERK_PUBLISHABLE_KEY_staging"
            "ANTHROPIC_API_KEY_prod"
            "ANTHROPIC_API_KEY_staging"
            "DD_API_KEY_prod"
            "DD_API_KEY_staging"
            "TF_VAR_DATABASE_PASSWORD_prod"
            "TF_VAR_DATABASE_PASSWORD_staging"
            "TF_VAR_DATABASE_USER_prod"
            "TF_VAR_DATABASE_USER_staging"
            "TF_VAR_DATABASE_NAME_prod"
            "TF_VAR_DATABASE_NAME_staging"
            "TF_VAR_PMS_CLERK_SECRET_KEY_prod"
            "TF_VAR_PMS_CLERK_SECRET_KEY_staging"
            "TF_VAR_PATIENT_CLERK_SECRET_KEY_prod"
            "TF_VAR_PATIENT_CLERK_SECRET_KEY_staging"
            "TF_VAR_JOBS_CLERK_SECRET_KEY_prod"
            "TF_VAR_JOBS_CLERK_SECRET_KEY_staging"
            "TF_VAR_AWS_ACCESS_KEY_ID_prod"
            "TF_VAR_AWS_ACCESS_KEY_ID_staging"
            "TF_VAR_AWS_SECRET_ACCESS_KEY_prod"
            "TF_VAR_AWS_SECRET_ACCESS_KEY_staging"
            "TF_VAR_OPENAI_API_KEY_prod"
            "TF_VAR_OPENAI_API_KEY_staging"
            "TF_VAR_STRIPE_PUBLISHABLE_KEY_prod"
            "TF_VAR_STRIPE_PUBLISHABLE_KEY_staging"
            "TF_VAR_STRIPE_SECRET_KEY_prod"
            "TF_VAR_STRIPE_SECRET_KEY_staging"
            "TF_VAR_STRIPE_WEBHOOK_SECRET_prod"
            "TF_VAR_STRIPE_WEBHOOK_SECRET_staging"
            "TF_VAR_STRIPE_WEBHOOK_SECRET_INNGEST_prod"
            "TF_VAR_STRIPE_WEBHOOK_SECRET_INNGEST_staging"
            "TF_VAR_TYPEFORM_SECRET_prod"
            "TF_VAR_TYPEFORM_SECRET_staging"
            "TF_VAR_CALENDLY_API_KEY_prod"
            "TF_VAR_CALENDLY_API_KEY_staging"
            "TF_VAR_CAL_API_KEY_prod"
            "TF_VAR_CAL_API_KEY_staging"
            "TF_VAR_CAL_SECRET_KEY_prod"
            "TF_VAR_CAL_SECRET_KEY_staging"
            "TF_VAR_DEXA_PROCESSOR_ID_prod"
            "TF_VAR_DEXA_PROCESSOR_ID_staging"
            "TF_VAR_CLAUDE_API_KEY_prod"
            "TF_VAR_CLAUDE_API_KEY_staging"
            "TF_VAR_AWS_PATHOLOGY_BUCKET_prod"
            "TF_VAR_AWS_PATHOLOGY_BUCKET_staging"
            "TF_VAR_TWILIO_ACCOUNT_SID_prod"
            "TF_VAR_TWILIO_ACCOUNT_SID_staging"
            "TF_VAR_TWILIO_AUTH_TOKEN_prod"
            "TF_VAR_TWILIO_AUTH_TOKEN_staging"
            "TF_VAR_CALENDLY_WEBHOOK_SIGNING_KEY_prod"
            "TF_VAR_CALENDLY_WEBHOOK_SIGNING_KEY_staging"
            "TF_VAR_CLERK_WEBHOOK_SECRET_prod"
            "TF_VAR_CLERK_WEBHOOK_SECRET_staging"
            "TF_VAR_AIRTABLE_KEY_prod"
            "TF_VAR_AIRTABLE_KEY_staging"
            "TF_VAR_AWS_KEY_prod"
            "TF_VAR_AWS_KEY_staging"
            "TF_VAR_AWS_SECRET_prod"
            "TF_VAR_AWS_SECRET_staging"
            "TF_VAR_PATIENT_CLERK_PUBLISHABLE_KEY_NEW_prod"
            "TF_VAR_PATIENT_CLERK_PUBLISHABLE_KEY_NEW_staging"
            "TF_VAR_JOBS_CLERK_PUBLISHABLE_KEY_prod"
            "TF_VAR_JOBS_CLERK_PUBLISHABLE_KEY_staging"
            "TF_VAR_PMS_CLERK_PUBLISHABLE_KEY_prod"
            "TF_VAR_PMS_CLERK_PUBLISHABLE_KEY_staging"
            "TF_VAR_INNGEST_SIGNING_KEY_prod"
            "TF_VAR_INNGEST_SIGNING_KEY_staging"
            "TF_VAR_INNGEST_EVENT_KEY_prod"
            "TF_VAR_INNGEST_EVENT_KEY_staging"
            "TF_VAR_INNGEST_ENV_prod"
            "TF_VAR_INNGEST_ENV_staging"
            "TF_VAR_INNGEST_DEV_prod"
            "TF_VAR_INNGEST_DEV_staging"
            "VELLUM_API_KEY_prod"
            "VELLUM_API_KEY_staging"
            "COPILOT_CHROME_EXTENSION_PRIVATE_KEY_staging"
          )

          for secret in "${secrets[@]}"; do
            gcp_secret_id="${secret#TF_VAR_}"

            echo "Would migrate $secret -> $gcp_secret_id"

            # echo "${{ secrets[$secret] }}" | gcloud secrets create "$gcp_secret_id" \
            #   --project="${{ env.GCP_PROJECT_ID }}" \
            #   --replication-policy="automatic" \
            #   --labels="migrated-from=github,migration-date=$(date +%F)" || true

            # echo "${{ secrets[$secret] }}" | gcloud secrets versions add "$gcp_secret_id" \
            #   --project="${{ env.GCP_PROJECT_ID }}" \
            #   --data-file=-
          done

          echo "âœ… Dry run complete. Secrets listed. Uncomment creation lines to write to GCP."
