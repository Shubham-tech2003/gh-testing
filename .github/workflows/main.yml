name: 'Migrate Secrets: GitHub to GCP'

on:
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  GCP_PROJECT_ID: 'everlab-secrets'
  GCP_WORKLOAD_IDENTITY_PROVIDER: 'projects/670325066591/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
  GCP_SERVICE_ACCOUNT: 'github-secrets-migrator-sa@everlab-secrets.iam.gserviceaccount.com'

jobs:
  migrate-secrets:
    name: Migrate GitHub Secrets to GCP Secret Manager
    runs-on: ubuntu-latest

    env:
      LINEAR_API_KEY: ${{ secrets.LINEAR_API_KEY }}
      LINEAR_CLIENT_ID: ${{ secrets.LINEAR_CLIENT_ID }}
      LINEAR_CLIENT_SECRET: ${{ secrets.LINEAR_CLIENT_SECRET }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      CLOUDFLARE_ORG_staging: ${{ secrets.CLOUDFLARE_ORG_staging }}
      CLOUDFLARE_CLIENT_ID_staging: ${{ secrets.CLOUDFLARE_CLIENT_ID_staging }}
      CLOUDFLARE_CLIENT_SECRET_staging: ${{ secrets.CLOUDFLARE_CLIENT_SECRET_staging }}
      TF_VAR_PATIENT_CLERK_SECRET_KEY_staging: ${{ secrets.TF_VAR_PATIENT_CLERK_SECRET_KEY_staging }}
      TF_VAR_PATIENT_CLERK_SECRET_KEY_prod: ${{ secrets.TF_VAR_PATIENT_CLERK_SECRET_KEY_prod }}
      COPILOT_CHROME_EXTENSION_PRIVATE_KEY_prod: ${{ secrets.COPILOT_CHROME_EXTENSION_PRIVATE_KEY_prod }}
      PULUMI_CLOUDFLARE_API_TOKEN_staging: ${{ secrets.PULUMI_CLOUDFLARE_API_TOKEN_staging }}
      PULUMI_CLOUDFLARE_API_TOKEN_prod: ${{ secrets.PULUMI_CLOUDFLARE_API_TOKEN_prod }}
      PULUMI_APP_CONFIG_PASSPHRASE_staging: ${{ secrets.PULUMI_APP_CONFIG_PASSPHRASE_staging }}
      PULUMI_APP_CONFIG_PASSPHRASE_prod: ${{ secrets.PULUMI_APP_CONFIG_PASSPHRASE_prod }}
      PULUMI_CICD_GOOGLE_CREDENTIALS_staging: ${{ secrets.PULUMI_CICD_GOOGLE_CREDENTIALS_staging }}
      PULUMI_CICD_GOOGLE_CREDENTIALS_prod: ${{ secrets.PULUMI_CICD_GOOGLE_CREDENTIALS_prod }}
      TF_VAR_DATABASE_PASSWORD_staging: ${{ secrets.TF_VAR_DATABASE_PASSWORD_staging }}
      TF_VAR_DATABASE_PASSWORD_prod: ${{ secrets.TF_VAR_DATABASE_PASSWORD_prod }}
      TF_VAR_DATABASE_USER_staging: ${{ secrets.TF_VAR_DATABASE_USER_staging }}
      TF_VAR_DATABASE_USER_prod: ${{ secrets.TF_VAR_DATABASE_USER_prod }}
      TF_VAR_DATABASE_NAME_staging: ${{ secrets.TF_VAR_DATABASE_NAME_staging }}
      TF_VAR_DATABASE_NAME_prod: ${{ secrets.TF_VAR_DATABASE_NAME_prod }}
      DB_READONLY_USER_PASSWORD_staging: ${{ secrets.DB_READONLY_USER_PASSWORD_staging }}
      DB_READONLY_USER_PASSWORD_prod: ${{ secrets.DB_READONLY_USER_PASSWORD_prod }}
      TF_VAR_PMS_CLERK_SECRET_KEY_staging: ${{ secrets.TF_VAR_PMS_CLERK_SECRET_KEY_staging }}
      TF_VAR_PMS_CLERK_SECRET_KEY_prod: ${{ secrets.TF_VAR_PMS_CLERK_SECRET_KEY_prod }}
      TF_VAR_JOBS_CLERK_SECRET_KEY_staging: ${{ secrets.TF_VAR_JOBS_CLERK_SECRET_KEY_staging }}
      TF_VAR_JOBS_CLERK_SECRET_KEY_prod: ${{ secrets.TF_VAR_JOBS_CLERK_SECRET_KEY_prod }}
      TF_VAR_JOBS_CLERK_PUBLISHABLE_KEY_staging: ${{ secrets.TF_VAR_JOBS_CLERK_PUBLISHABLE_KEY_staging }}
      TF_VAR_JOBS_CLERK_PUBLISHABLE_KEY_prod: ${{ secrets.TF_VAR_JOBS_CLERK_PUBLISHABLE_KEY_prod }}
      TF_VAR_AWS_ACCESS_KEY_ID_staging: ${{ secrets.TF_VAR_AWS_ACCESS_KEY_ID_staging }}
      TF_VAR_AWS_ACCESS_KEY_ID_prod: ${{ secrets.TF_VAR_AWS_ACCESS_KEY_ID_prod }}
      TF_VAR_AWS_SECRET_ACCESS_KEY_staging: ${{ secrets.TF_VAR_AWS_SECRET_ACCESS_KEY_staging }}
      TF_VAR_AWS_SECRET_ACCESS_KEY_prod: ${{ secrets.TF_VAR_AWS_SECRET_ACCESS_KEY_prod }}
      TF_VAR_OPENAI_API_KEY_staging: ${{ secrets.TF_VAR_OPENAI_API_KEY_staging }}
      TF_VAR_OPENAI_API_KEY_prod: ${{ secrets.TF_VAR_OPENAI_API_KEY_prod }}
      TF_VAR_STRIPE_PUBLISHABLE_KEY_staging: ${{ secrets.TF_VAR_STRIPE_PUBLISHABLE_KEY_staging }}
      TF_VAR_STRIPE_PUBLISHABLE_KEY_prod: ${{ secrets.TF_VAR_STRIPE_PUBLISHABLE_KEY_prod }}
      TF_VAR_STRIPE_SECRET_KEY_staging: ${{ secrets.TF_VAR_STRIPE_SECRET_KEY_staging }}
      TF_VAR_STRIPE_SECRET_KEY_prod: ${{ secrets.TF_VAR_STRIPE_SECRET_KEY_prod }}
      TF_VAR_STRIPE_WEBHOOK_SECRET_staging: ${{ secrets.TF_VAR_STRIPE_WEBHOOK_SECRET_staging }}
      TF_VAR_STRIPE_WEBHOOK_SECRET_prod: ${{ secrets.TF_VAR_STRIPE_WEBHOOK_SECRET_prod }}
      TF_VAR_STRIPE_WEBHOOK_SECRET_INNGEST_staging: ${{ secrets.TF_VAR_STRIPE_WEBHOOK_SECRET_INNGEST_staging }}
      TF_VAR_STRIPE_WEBHOOK_SECRET_INNGEST_prod: ${{ secrets.TF_VAR_STRIPE_WEBHOOK_SECRET_INNGEST_prod }}
      TF_VAR_TYPEFORM_SECRET_staging: ${{ secrets.TF_VAR_TYPEFORM_SECRET_staging }}
      TF_VAR_TYPEFORM_SECRET_prod: ${{ secrets.TF_VAR_TYPEFORM_SECRET_prod }}
      TF_VAR_CALENDLY_API_KEY_staging: ${{ secrets.TF_VAR_CALENDLY_API_KEY_staging }}
      TF_VAR_CALENDLY_API_KEY_prod: ${{ secrets.TF_VAR_CALENDLY_API_KEY_prod }}
      TF_VAR_CAL_API_KEY_staging: ${{ secrets.TF_VAR_CAL_API_KEY_staging }}
      TF_VAR_CAL_API_KEY_prod: ${{ secrets.TF_VAR_CAL_API_KEY_prod }}
      TF_VAR_CAL_SECRET_KEY_staging: ${{ secrets.TF_VAR_CAL_SECRET_KEY_staging }}
      TF_VAR_CAL_SECRET_KEY_prod: ${{ secrets.TF_VAR_CAL_SECRET_KEY_prod }}
      TF_VAR_DEXA_PROCESSOR_ID_staging: ${{ secrets.TF_VAR_DEXA_PROCESSOR_ID_staging }}
      TF_VAR_DEXA_PROCESSOR_ID_prod: ${{ secrets.TF_VAR_DEXA_PROCESSOR_ID_prod }}
      OCR_PROCESSOR_ID_staging: ${{ secrets.OCR_PROCESSOR_ID_staging }}
      OCR_PROCESSOR_ID_prod: ${{ secrets.OCR_PROCESSOR_ID_prod }}
      TF_VAR_CLAUDE_API_KEY_staging: ${{ secrets.TF_VAR_CLAUDE_API_KEY_staging }}
      TF_VAR_CLAUDE_API_KEY_prod: ${{ secrets.TF_VAR_CLAUDE_API_KEY_prod }}
      TF_VAR_AWS_PATHOLOGY_BUCKET_staging: ${{ secrets.TF_VAR_AWS_PATHOLOGY_BUCKET_staging }}
      TF_VAR_AWS_PATHOLOGY_BUCKET_prod: ${{ secrets.TF_VAR_AWS_PATHOLOGY_BUCKET_prod }}
      TF_VAR_TWILIO_ACCOUNT_SID_staging: ${{ secrets.TF_VAR_TWILIO_ACCOUNT_SID_staging }}
      TF_VAR_TWILIO_ACCOUNT_SID_prod: ${{ secrets.TF_VAR_TWILIO_ACCOUNT_SID_prod }}
      TF_VAR_TWILIO_AUTH_TOKEN_staging: ${{ secrets.TF_VAR_TWILIO_AUTH_TOKEN_staging }}
      TF_VAR_TWILIO_AUTH_TOKEN_prod: ${{ secrets.TF_VAR_TWILIO_AUTH_TOKEN_prod }}
      TF_VAR_CALENDLY_WEBHOOK_SIGNING_KEY_staging: ${{ secrets.TF_VAR_CALENDLY_WEBHOOK_SIGNING_KEY_staging }}
      TF_VAR_CALENDLY_WEBHOOK_SIGNING_KEY_prod: ${{ secrets.TF_VAR_CALENDLY_WEBHOOK_SIGNING_KEY_prod }}
      TF_VAR_CLERK_WEBHOOK_SECRET_staging: ${{ secrets.TF_VAR_CLERK_WEBHOOK_SECRET_staging }}
      TF_VAR_CLERK_WEBHOOK_SECRET_prod: ${{ secrets.TF_VAR_CLERK_WEBHOOK_SECRET_prod }}
      TF_VAR_AIRTABLE_KEY_staging: ${{ secrets.TF_VAR_AIRTABLE_KEY_staging }}
      TF_VAR_AIRTABLE_KEY_prod: ${{ secrets.TF_VAR_AIRTABLE_KEY_prod }}
      TF_VAR_AWS_KEY_staging: ${{ secrets.TF_VAR_AWS_KEY_staging }}
      TF_VAR_AWS_KEY_prod: ${{ secrets.TF_VAR_AWS_KEY_prod }}
      TF_VAR_AWS_SECRET_staging: ${{ secrets.TF_VAR_AWS_SECRET_staging }}
      TF_VAR_AWS_SECRET_prod: ${{ secrets.TF_VAR_AWS_SECRET_prod }}
      TF_VAR_PATIENT_CLERK_PUBLISHABLE_KEY_NEW_staging: ${{ secrets.TF_VAR_PATIENT_CLERK_PUBLISHABLE_KEY_NEW_staging }}
      TF_VAR_PATIENT_CLERK_PUBLISHABLE_KEY_NEW_prod: ${{ secrets.TF_VAR_PATIENT_CLERK_PUBLISHABLE_KEY_NEW_prod }}
      TF_VAR_PMS_CLERK_PUBLISHABLE_KEY_staging: ${{ secrets.TF_VAR_PMS_CLERK_PUBLISHABLE_KEY_staging }}
      TF_VAR_PMS_CLERK_PUBLISHABLE_KEY_prod: ${{ secrets.TF_VAR_PMS_CLERK_PUBLISHABLE_KEY_prod }}
      TF_VAR_INNGEST_SIGNING_KEY_staging: ${{ secrets.TF_VAR_INNGEST_SIGNING_KEY_staging }}
      TF_VAR_INNGEST_SIGNING_KEY_prod: ${{ secrets.TF_VAR_INNGEST_SIGNING_KEY_prod }}
      TF_VAR_INNGEST_EVENT_KEY_staging: ${{ secrets.TF_VAR_INNGEST_EVENT_KEY_staging }}
      TF_VAR_INNGEST_EVENT_KEY_prod: ${{ secrets.TF_VAR_INNGEST_EVENT_KEY_prod }}
      TF_VAR_INNGEST_ENV_staging: ${{ secrets.TF_VAR_INNGEST_ENV_staging }}
      TF_VAR_INNGEST_ENV_prod: ${{ secrets.TF_VAR_INNGEST_ENV_prod }}
      TF_VAR_INNGEST_DEV_staging: ${{ secrets.TF_VAR_INNGEST_DEV_staging }}
      TF_VAR_INNGEST_DEV_prod: ${{ secrets.TF_VAR_INNGEST_DEV_prod }}
      ANTHROPIC_API_KEY_staging: ${{ secrets.ANTHROPIC_API_KEY_staging }}
      ANTHROPIC_API_KEY_prod: ${{ secrets.ANTHROPIC_API_KEY_prod }}
      VELLUM_API_KEY_staging: ${{ secrets.VELLUM_API_KEY_staging }}
      VELLUM_API_KEY_prod: ${{ secrets.VELLUM_API_KEY_prod }}
      SYNTHESIA_API_KEY_staging: ${{ secrets.SYNTHESIA_API_KEY_staging }}
      SYNTHESIA_API_KEY_prod: ${{ secrets.SYNTHESIA_API_KEY_prod }}
      SYNTHESIA_WEBHOOK_SECRET_staging: ${{ secrets.SYNTHESIA_WEBHOOK_SECRET_staging }}
      SYNTHESIA_WEBHOOK_SECRET_prod: ${{ secrets.SYNTHESIA_WEBHOOK_SECRET_prod }}
      CONSULT_CLERK_SECRET_KEY_staging: ${{ secrets.CONSULT_CLERK_SECRET_KEY_staging }}
      CONSULT_CLERK_SECRET_KEY_prod: ${{ secrets.CONSULT_CLERK_SECRET_KEY_prod }}
      CONSULT_CLERK_PUBLISHABLE_KEY_staging: ${{ secrets.CONSULT_CLERK_PUBLISHABLE_KEY_staging }}
      CONSULT_CLERK_PUBLISHABLE_KEY_prod: ${{ secrets.CONSULT_CLERK_PUBLISHABLE_KEY_prod }}
      DD_API_KEY_staging: ${{ secrets.DD_API_KEY_staging }}
      DD_API_KEY_prod: ${{ secrets.DD_API_KEY_prod }}
      SES_EVENT_INNGEST_WEBHOOK_SECRET_staging: ${{ secrets.SES_EVENT_INNGEST_WEBHOOK_SECRET_staging }}
      SES_EVENT_INNGEST_WEBHOOK_SECRET_prod: ${{ secrets.SES_EVENT_INNGEST_WEBHOOK_SECRET_prod }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to GCP using WIF
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.GCP_SERVICE_ACCOUNT }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Migrate all GitHub secrets to GCP
        run: |
          for key in $(env | cut -d= -f1); do
            value="${!key}"
            [[ -z "$value" ]] && continue

            gcp_name="${key}"
            [[ "$key" == TF_VAR_* ]] && gcp_name="${key#TF_VAR_}"
            gcp_name=$(echo "$gcp_name" | tr '[:upper:]' '[:lower:]')

            echo "Migrating: $key --> $gcp_name"
            echo "$value" | gcloud secrets create "$gcp_name" \
              --project="${GCP_PROJECT_ID}" \
              --replication-policy="automatic" \
              --labels="migrated-from=github,migration-date=$(date +%F)" 2>/dev/null || true

            echo "$value" | gcloud secrets versions add "$gcp_name" \
              --project="${GCP_PROJECT_ID}" \
              --data-file=-
          done

          echo "✅ All secrets migrated."
